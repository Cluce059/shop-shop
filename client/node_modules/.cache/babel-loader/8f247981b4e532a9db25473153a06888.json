{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cluce\\\\Desktop\\\\cs-stuff\\\\projects\\\\shop-shop\\\\client\\\\src\\\\pages\\\\Detail.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport { QUERY_PRODUCTS } from \"../utils/queries\";\nimport spinner from '../assets/spinner.gif';\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY, ADD_TO_CART, UPDATE_PRODUCTS } from '../utils/actions';\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const {\n    id\n  } = useParams();\n  const [currentProduct, setCurrentProduct] = useState({});\n  const {\n    loading,\n    data\n  } = useQuery(QUERY_PRODUCTS);\n  const {\n    products\n  } = state;\n  const {\n    cart\n  } = state;\n\n  const addToCart = () => {\n    // find the cart item with the matching id\n    const itemInCart = cart.find(cartItem => cartItem._id === _id); // if there was a match, call UPDATE with a new purchase quantity\n\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item,\n          purchaseQuantity: 1\n        }\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (products.length) {\n      setCurrentProduct(products.find(product => product._id === id));\n    } else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n    }\n  }, [products, data, dispatch, id]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, currentProduct ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"\\u2190 Back to Products\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, currentProduct.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, currentProduct.description), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Price:\"), \"$\", currentProduct.price, \" \", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addToCart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"Add to Cart\"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Remove from Cart\")), /*#__PURE__*/React.createElement(\"img\", {\n    src: `/images/${currentProduct.image}`,\n    alt: currentProduct.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  })) : null, loading ? /*#__PURE__*/React.createElement(\"img\", {\n    src: spinner,\n    alt: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 19\n    }\n  }) : null);\n}\n\n;\nexport default Detail;","map":{"version":3,"sources":["C:/Users/cluce/Desktop/cs-stuff/projects/shop-shop/client/src/pages/Detail.js"],"names":["React","useEffect","useState","Link","useParams","useQuery","useStoreContext","QUERY_PRODUCTS","spinner","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","ADD_TO_CART","UPDATE_PRODUCTS","Detail","state","dispatch","id","currentProduct","setCurrentProduct","loading","data","products","cart","addToCart","itemInCart","find","cartItem","_id","type","purchaseQuantity","parseInt","product","item","length","name","description","price","image"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useQuery } from '@apollo/react-hooks';\n\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport { QUERY_PRODUCTS } from \"../utils/queries\";\nimport spinner from '../assets/spinner.gif'\n\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({})\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products } = state;\n  const { cart } = state;\n\n  const addToCart = () => {\n    // find the cart item with the matching id\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id);\n  \n    // if there was a match, call UPDATE with a new purchase quantity\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n    }\n  };\n  useEffect(() => {\n    if (products.length) {\n      setCurrentProduct(products.find(product => product._id === id));\n    } else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n    }\n  }, [products, data, dispatch, id]);\n\n\n\n  return (\n    <>\n      {currentProduct ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">\n            ‚Üê Back to Products\n          </Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>\n            {currentProduct.description}\n          </p>\n\n          <p>\n            <strong>Price:</strong>\n            ${currentProduct.price}\n            {\" \"}\n            <button onClick={addToCart}>\n              Add to Cart\n            </button>\n            <button >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {\n        loading ? <img src={spinner} alt=\"loading\" /> : null\n      }\n    </>\n  );\n};\n\nexport default Detail;\n\n"]},"metadata":{},"sourceType":"module"}